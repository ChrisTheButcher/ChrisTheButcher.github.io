@mixin bp($width, $minmax: min) {
  @media screen and (#{$minmax}-width: $width) {
      @content;
  }
}

//The Chris Grid
@mixin grid-row($col-gutter: 0) {
	@include clearfix;
	margin-left:-$col-gutter / 2;
	margin-right:-$col-gutter / 2;
}
@mixin grid-col($col-span:6, $col-total:12, $col-gutter: 0){
	width:percentage($col-span / $col-total);
	float:left;
	padding-left:$col-gutter / 2;
	padding-right:$col-gutter / 2;
}

// Position
@mixin abs($top: 0, $right: $top, $bottom: $top, $left: $top) {
  position:absolute;
  top:$top; right:$right; bottom:$bottom; left:$left;
}

@mixin fxd($top:0, $right: $top, $bottom: $top, $left: $top) {
  position:fixed;
  top:$top; right:$right; bottom:$bottom; left:$left;
}

@mixin middle {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// Type
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  word-break: break-all;
}

@mixin h {
	h1,h2,h3,h4,h5,h6,.h1,.h2,.h3,.h4,.h5,.h6 { @content; }
}

@mixin reset-space {
    margin:0;
    padding:0;
}

// Dimensions
@mixin size($width: 100%, $height: $width) {
  width: $width;
  height: $height;
}

@function rem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}

@function strip-units($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

@mixin rem($size) {
  font-size: $size; //Fallback in px
  font-size: rem($size);
}

@mixin fluid-type($min: 14px, $max: 18px) {
    font-size: $min;

    @media screen and (min-width: $screen-xs) {
        font-size: calc(#{$min} + #{strip-units($max - $min)} * ((100vw - #{$screen-xs}) / #{strip-units($screen-lg - $screen-xs)}));
    }

    @media screen and (min-width: $screen-lg) {
        font-size: $max;
    }
}

@mixin h-wrapper {
    $gutter: 20px;
    padding-left: $gutter;    
    padding-right: $gutter;
    
    @include bp($screen-xs) {
        $gutter: 30px;
        padding-left: $gutter;    
        padding-right: $gutter;
    }
    
    @include bp($screen-sm) {
        $gutter: 30px;
        padding-left: $gutter;    
        padding-right: $gutter;
    }
    
    @include bp($screen-md) {
        $gutter: 40px;
        padding-left: $gutter;    
        padding-right: $gutter;
    }
}

@mixin v-wrapper {
    $gutter: 20px;
    padding-top: $gutter;    
    padding-bottom: $gutter;
    
    @include bp($screen-xs) {
        $gutter: 30px;
        padding-top: $gutter;    
        padding-bottom: $gutter;
    }
    
    @include bp($screen-sm) {
        $gutter: 40px;
        padding-top: $gutter;    
        padding-bottom: $gutter;
    }
    
    @include bp($screen-md) {
        $gutter: 60px;
        padding-top: $gutter;    
        padding-bottom: $gutter;
    }
}

@mixin ripple($bg-color, $hover: null) {
  @if $hover != null {
    background-color: nth($bg-color, 1);
  } @else {
    background: nth($bg-color, 1) 50%;
    background-size: 100%;

    &:active {      
      background: radial-gradient(circle, nth($bg-color, 1) 10%, nth($bg-color, 2) 11%) 50% no-repeat;
      background-size: 1000%;
      @content;
    }
  }
}